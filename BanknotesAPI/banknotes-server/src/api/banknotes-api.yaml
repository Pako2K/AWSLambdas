openapi: 3.0.2
info:
  title: Banknotes API
  description: API for the Banknotes Database.
  version: "1.0.0"
  contact:
    email: admin@banknotes.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/banknotes-catalogue/banknotes-api/1.0.0
  - description: Banknotes Catalogue and Collection Management API
    url: https://banknotes-db/banknotes-api/1.0.0
tags:
  - name: Territories
    description: Manage geographical organization of banknotes
  - name: Currencies
    description: Manage currency information
  - name: Series
    description: Manage currency series information
  - name: Banknotes
    description: Manage denominations information
  - name: Variants
    description: Manage banknote variants information
  - name: Items
    description: Manage banknotes in the user collection
  - name: Miscellanea
    description: Set of operations to retrieve static data
  - name: Users
    description: Manage users and user sessions

paths:
  /user/session:
    get:
      tags: 
      - Users
      summary: Log in and create session
      description: For the provided user a new session is returned, if no session existed yet
      operationId: user-session-get
      security:
      - basicAuthentication: []
      responses:
        "200":
          description: Login executed successfully or user was already logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionResponse'
        "400":
          description: "LOG-01: Http header (authorization) not provided | LOG-02: Value of Http header (authorization) is not valid | LOG-03: Invalid username:password in 'authorization' header"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "401":
          description: "AUT-01: Username or password is not valid | AUT-02: Account is not activated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'


  /item:
    get:
      tags: 
      - Items
      summary: Get list of all items in the collection.
      description: Returns a list of items in the user's collection.
      operationId: item-get
      security:
      - bearerToken: []
      responses:
        "200":
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemLinked'
        "400":
          description: "ERR-01: Http header (authorization) not provided | ERR-02: Value of Http header (authorization) is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "401":
          description: "ERR-11: Token is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          $ref: '#/components/responses/403'
        "500":
          $ref: '#/components/responses/500'


  /continent:
    get:
      tags:
      - Territories
      summary: Get list of continents.
      description: Returns the list of defined continents, sorted alphabetically
      operationId: continent-get
      responses:
        "200":
          description: List of continents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/continent'
        "500":
          $ref: '#/components/responses/500'


  /territory-type:
    get:
      tags:
      - Territories
      summary: Get territory types.
      description: Returns a list of territory types.
      operationId: territorytype-get
      responses:
        "200":
          description: List of territory types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryType'
        "500":
          $ref: '#/components/responses/500'

  /territory:
    get:
      tags:
      - Territories
      summary: Get list of territories basic data.
      description: Returns the list of territories, sorted alphabetically
      operationId: territory-get
      parameters:
      - in: query
        name: id
        required: false
        description: Retrieve only the territory for this id
        schema:
          type: integer
      responses:
        "200":
          description: List of territories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territory'
        "500":
          $ref: '#/components/responses/500'


  /territory/stats:
    get:
      tags:
      - Territories
      summary: Get statistics about banknotes in the catalogue or in a collection for each territory. 
      description: Returns statistics about banknotes in the catalogue or in a collection, if parameter 'user' and sessionId are provided, for each territory. 
      operationId: territory-stats-get
      security:
      - bearerToken: []
      parameters:
      - in: query
        name: user
        required: false
        description: Retrieve only the stats for this user's collection
        schema:
          type: string
      responses:
        "200":
          description: List of territories with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryStats'
        "400":
          description: "ERR-01: Missing parameter in query string, ERR-02: Value of Http header (authorization) is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "401":
          description: "ERR-11: Token is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          $ref: '#/components/responses/403'
        "500":
          $ref: '#/components/responses/500'
  
    
  
  /currency:
    get:
      tags:
      - Currencies
      summary: Get list of currencies.
      description: Returns the list of currencies, sorted alphabetically
      operationId: currency-get
      parameters:
      - in: query
        name: id
        required: false
        description: Retrieve only the currency with this id
        schema:
          type: integer
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency'
        "500":
          $ref: '#/components/responses/500'


  /currency/stats:
    get:
      tags: 
      - Currencies
      summary: Get statistics about banknotes in the catalogue or in a collection for each currency. 
      description: Returns statistics about banknotes in the catalogue or in a collection, if parameter 'user' and sessionId are provided, for each currency. 
      operationId: currency-stats-get
      security:
      - bearerToken: []
      parameters:
      - in: query
        name: user
        required: false
        description: Retrieve only the stats for this user's collection
        schema:
          type: string
      responses:
        "200":
          description: List of currencies with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyStats'
        "400":
          description: "ERR-01: Missing parameter in query string, ERR-02: Value of Http header (authorization) is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "401":
          description: "ERR-11: Token is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          $ref: '#/components/responses/403'
        "500":
          $ref: '#/components/responses/500'
  
  
  /denomination/stats:
    get:
      tags: 
      - Banknotes
      summary: Get statistics about banknotes in the catalogue or in a collection for each denomination. 
      description: Returns statistics about banknotes in the catalogue or in a collection, if parameter 'user' and sessionId are provided, for each denomination. 
      operationId: denomination-stats-get
      security:
      - bearerToken: []
      parameters:
      - in: query
        name: user
        required: false
        description: Retrieve only the stats for this user's collection
        schema:
          type: string
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations issued in or after this year
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations issued up to this year
      responses:
        "200":
          description: List of denominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationStats'
        "400":
          description: "ERR-01: Missing parameter in query string, ERR-02: Value of Http header (authorization) is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "401":
          description: "ERR-11: Token is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          $ref: '#/components/responses/403'
        "500":
          $ref: '#/components/responses/500'


  /issue-year/stats:
    get:
      tags: 
      - Variants
      summary: Get statistics about banknotes in the catalogue or in a collection for each year of issue. 
      description: Returns statistics about banknotes in the catalogue or in a collection, if parameter 'user' and sessionId are provided, for each year of issue. 
      operationId: issue-year-stats-get
      security:
      - bearerToken: []
      parameters:
      - in: query
        name: user
        required: false
        description: Retrieve only the stats for this user's collection
        schema:
          type: string
      responses:
        "200":
          description: List of years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearStats'
        "400":
          description: "ERR-01: Missing parameter in query string, ERR-02: Value of Http header (authorization) is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "401":
          description: "ERR-11: Token is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          $ref: '#/components/responses/403'
        "500":
          $ref: '#/components/responses/500'         
         
  
  /printer:
    get:
      tags: 
      - Miscellanea
      summary: Get printing entities
      description: Retrieves the list of known banknotes printing entities
      operationId: printer-get
      responses:
        "200":
          description: Success. 
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/printer'
        "500":
          $ref: '#/components/responses/500'
  
  
  /material:
    get:
      tags: 
      - Miscellanea
      summary: Get materials
      description: Retrieves the list of known materials used to print banknotes
      operationId: material-get
      responses:
        "200":
          description: Success. 
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/material'
        "500":
          $ref: '#/components/responses/500'  
                
                
components:
  parameters:
    territoryId:
      in: path
      name: territoryId
      required: true
      description: Id of the territory
      schema:
        type: integer
    currencyId:
      in: path
      name: currencyId
      required: true
      description: Id of the currency
      schema:
        type: integer
    seriesId:
      in: path
      name: seriesId
      required: true
      description: Id of the series
      schema:
        type: integer
    denominationId:
      in: path
      name: denominationId
      required: true
      description: Id of the series
      schema:
        type: integer
    variantId:
      in: path
      name: variantId
      required: true
      description: Id of the variant
      schema:
        type: integer
    itemId:
      in: path
      name: itemId
      required: true
      description: Id of the item
      schema:
        type: integer
    cookieUsername:
      in: cookie
      name: BOC.user.name
      required: true
      description: logged in user name
      schema:
        type: string
    cookieSessionId:
      in: cookie
      name: wid
      required: true
      description: Session Id for the logged in user
      schema: 
        type: string
    searchContinentId:
      in: query
      name: continentId
      required: false
      description: Retrieve resource from countries in this Continent
      schema:
        type: integer
    searchTerritoryId:
      in: query
      name: territoryId
      required: false
      description: Retrieve resource for this specific territory
      schema:
        type: integer
    searchTerTypeIds:
      in: query
      name: terTypeIds
      required: false
      description: Retrieve resource from countries of these types (list of id's separated by ",")
      schema:
        type: string
    searchTerStartDateFrom:
      in: query
      name: terStartDateFrom
      required: false
      description: Retrieve resource from countries founded in or after this year
      schema:
        type: integer
    searchTerStartDateTo:
      in: query
      name: terStartDateTo
      required: false
      description: Retrieve resource from countries founded in or before this year
      schema:
        type: integer
    searchTerEndDateFrom:
      in: query
      name: terEndDateFrom
      required: false
      description: Retrieve resource from countries disappeared in or after this year
      schema:
        type: integer
    searchTerEndDateTo:
      in: query
      name: terEndtDateTo
      required: false
      description: Retrieve resource from countries disappeared in or before this year
      schema:
        type: integer
    searchTerIsExisting:
      in: query
      name: terIsExisting
      required: false
      description: Retrieve resource from countries currently existing
      allowEmptyValue: true 
      schema:
        type: boolean
    searchTerIsExtinct:
      in: query
      name: terIsExtinct
      required: false
      description: Retrieve resource from countries already extinct
      allowEmptyValue: true 
      schema:
        type: boolean
    searchTerExistingIn:
      in: query
      name: terExistingIn
      required: false
      description: Retrieve resource from countries existing in this year
      schema:
        type: integer
    searchCurTypeIds:
      in: query
      name: curTypeIds
      required: false
      description: Retrieve resource from currencies of these types (list of id's separated by ",")
      schema:
        type: string
    searchCurStartDateFrom:
      in: query
      name: curStartDateFrom
      required: false
      description: Retrieve resource of currencies created in or after this year
      schema:
        type: integer
    searchCurStartDateTo:
      in: query
      name: curStartDateTo
      required: false
      description: Retrieve resource of currencies created in or before this year
      schema:
        type: integer
    searchCurEndDateFrom:
      in: query
      name: curEndDateFrom
      required: false
      description: Retrieve resource of currencies disappeared in or after this year
      schema:
        type: integer
    searchCurEndDateTo:
      in: query
      name: curEndDateTo
      required: false
      description: Retrieve resource of currencies disappeared in or before this year
      schema:
        type: integer
    searchCurIsExisting:
      in: query
      name: terIsExisting
      required: false
      description: Retrieve resource from countries currently existing
      allowEmptyValue: true 
      schema:
        type: boolean
    searchCurIsExtinct:
      in: query
      name: terIsExtinct
      required: false
      description: Retrieve resource from countries already extinct
      allowEmptyValue: true 
      schema:
        type: boolean
    searchCurExistingIn:
      in: query
      name: terExistingIn
      required: false
      description: Retrieve resource from countries existing in this year
      schema:
        type: integer
    searchMinDenom:
      in: query
      name: minDenom
      required: false
      description: Retrieve resource with this or high denomination
      schema:
        type: integer
    searchMaxDenom:
      in: query
      name: maxDenom
      required: false
      description: Retrieve resource with this or lower denomination
      schema:
        type: integer
    searchIssueYearFrom:
      in: query
      name: issueYearFrom
      required: false
      description: Retrieve resource with issue date in or after this year
      schema:
        type: integer
    searchIssueYearTo:
      in: query
      name: issueYearTo
      required: false
      description: Retrieve resource with issue date in or before this year  
      schema:
        type: integer
    dateType:
      in: query
      name: dateType
      required: true
      description: Specify if the issue year or the printed date is used
      schema:
        type: string
        enum:
        - "issue"
        - "printed"
      
      
  responses:
    400:
      description: Invalid request. A parameter is missing or not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    403:
      description: Username is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    404:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'

  securitySchemes:
    basicAuthentication:
      type: http
      scheme: basic
    bearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    sessionResponse:
      type: object
      required:
      - id 
      - isAdmin
      - expiration
      properties:
        id:
          type: string
          description: session id
        isAdmin:
          type: boolean
          description: user logged in as Admin
        expiration:
          type: integer
          description: Session expiration time in miliseconds

    continent:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string


    territoryTypeKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
          
          
    territoryType:
      allOf:    
      - $ref: '#/components/schemas/territoryTypeKey'
      - type: object
        required:
        - abbreviation
        - description
        properties:
          abbreviation:
            type: string
          description:
            type: string


    territoryKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string


    territory:
      allOf:    
      - $ref: '#/components/schemas/territoryKey'
      - type: object
        required:
        - uri
        - continent
        - territoryType
        - officialName
        - start
        properties:
          continent:
            $ref: '#/components/schemas/continent'
          territoryType:
            $ref: '#/components/schemas/territoryTypeKey'
          iso2:
            $ref: '#/components/schemas/iso2'
          iso3:
            $ref: '#/components/schemas/iso3'
          officialName:
            type: string
          start:
            type: integer
          end:
            type: integer
          parentId:
            type: integer
          successors:
            type: array
            items:
              type: object
              required:
              - id
              properties:
                id:
                  type: integer
          issuers:
            type: array
            items:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
          description:
            type: string
          uri:
            type: string
            format: uri


    territoryStats:
      allOf:    
      - $ref: '#/components/schemas/territoryKey'
      - type: object
        required:
        - numCurrencies
        - numSeries
        - numDenominations
        - numNotes
        - numVariants
        properties:
          numCurrencies:
            type: integer
          numSeries:
            type: integer
          numDenominations:
            type: integer
          numNotes:
            type: integer
          numVariants:
            type: integer
          price:
            type: number


    currencyKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string


    currency:
      allOf:    
      - $ref: '#/components/schemas/currencyKey'
      - type: object
        required:
        - continent
        - fullName
        - start
        - ownedBy
        properties:
          continent:
            $ref: '#/components/schemas/continent'
          namePlural:
            type: string
          fullName:
            type: string
          iso3:
            $ref: '#/components/schemas/iso3'
          symbol:
            type: string
          start:
            type: string
          end:
            type: string
          ownedBy:
            type: array
            minItems: 1
            items:
              type: object
              required:
              - territory
              - start
              properties:
                territory:
                  $ref: '#/components/schemas/territoryKey'
                start:
                  type: string
                end:
                  type: string
          sharedBy:
            type: array
            items:
              type: object
              required:
              - territory
              - start
              properties:
                territory:
                  $ref: '#/components/schemas/territoryKey'
                start:
                  type: string
                end:
                  type: string
          usedBy:
            type: array
            items:
              type: object
              required:
              - territory
              - start
              properties:
                territory:
                  $ref: '#/components/schemas/territoryKey'
                start:
                  type: string
                end:
                  type: string
          successor:
            type: object
            required:
            - id
            properties:
              id:
                type: integer
              rate:
                type: number
          units:
            type: array
            items:
              type: object
              required:
              - id
              - name
              - value
              properties:
                id:
                  type: integer
                name:
                  type: string
                namePlural:
                  type: string
                value:
                  type: number
                abbreviation:
                  type: string
          description:
            type: string
          uri:
            type: string
            format: uri


          
    currencyType:
      type: string
      enum:
      - "OWNED"
      - "SHARED"

    

    currencyStats:
      allOf:    
      - $ref: '#/components/schemas/currencyKey'
      - type: object
        required:
        - numSeries
        - numDenominations
        - numNotes
        - numVariants
        properties:
          numSeries:
            type: integer
          numDenominations:
            type: integer
          numNotes:
            type: integer
          numVariants:
            type: integer

    
    currencyByTerCatStats:
      allOf:    
      - $ref: '#/components/schemas/currencyKey'
      - type: object
        required:
        - currencyType
        - isIssuer
        - start
        - numSeries
        - numDenominations
        - numNotes
        - numVariants
        properties:
          currencyType:
            $ref: '#/components/schemas/currencyType'
          isIssuer:
            type: integer
          symbol:
            type: string
          start:
            type: integer
          end:
            type: integer
          numSeries:
            type: integer
          numDenominations:
            type: integer
          numNotes:
            type: integer
          numVariants:
            type: integer
            
                
    denominationStats:
      type: object
      required:
      - denomination
      - continentStats
      properties:
        denomination:
          type: number
        continentStats:
          type: array
          items:
            type: object
            required:
            - id
            - numTerritories
            - numCurrencies
            - numNotes
            - numVariants
            properties:
              id:
                type: integer
              isCurrent:
                type: boolean
              numTerritories:
                type: integer
              numCurrencies:
                type: integer
              numNotes:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
       

    issueYearStats:
      type: object
      required:
      - issueYear
      - continentStats
      properties:
        issueYear:
          type: number
        continentStats:
          type: array
          items:
            type: object
            required:
            - id
            - numTerritories
            - numCurrencies
            - numSeries
            - numDenominations
            - numNotes
            - numVariants
            properties:
              id:
                type: integer
              numTerritories:
                type: integer
              numCurrencies:
                type: integer
              numSeries:
                type: integer
              numDenominations:
                type: integer
              numNotes:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
   

    item:
      type: object
      required:
      - id
      - variantId
      - grade
      - quantity
      - price
      properties:
        id:
          type: integer
        variantId:
          type: integer
        grade:
          type: string
        quantity:
          type: integer
        price:
          type: number
        seller:
          type: string
        purchaseDate:
          type: string
        description:
          type: string

    itemLinked:
      type: object
      required:
      - item
      - continent
      - territory
      - currency
      - denomination
      - catalogId
      properties:
        item:
          $ref: '#/components/schemas/item'
        continent:
          $ref: '#/components/schemas/continent'
        territory:
          $ref: '#/components/schemas/territoryKey'
        currency:
          $ref: '#/components/schemas/currencyKey'
        denomination:
          type: number
        catalogId: 
          type: string


    printer:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          type: string
        description:
          type: string
          

    material:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string

          
    iso2:
      type: string
      maxLength: 2
      minLength: 2


    iso3:
      type: string
      maxLength: 3
      minLength: 3
    

    date:
      oneOf:
      - type: object
        properties:
          issueYear:
            type: integer
      - type: object
        properties:
          printedDate:
            type: string


    exception:
      type: object
      properties:
        code:
          type: string
        description:
          type: string